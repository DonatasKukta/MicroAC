module Generate

open MicroAC.Persistence.DbDTOs

open System

let dataSeed = "SeedTestData"
let data str (i:int) =  $"{str}{i}_{dataSeed}"
let generate count map = Seq.map map { 1 .. 1 .. count }

let users (count: int) (organisations:seq<Organisation>) = 
    let oc = Seq.length organisations
    let getO i = (Seq.item (i % oc) organisations).Name
    generate count (fun i -> new User(
                                Id = Guid.NewGuid(),
                                Name = data "Name" i,
                                Surname = data "Surname" i,
                                Email = $"testemail{i}@{dataSeed}.com",
                                Phone = $"+370 6500{i}{i}",
                                Organisation = getO i,
                                Blocked = false
                                ))

let usersRoles count (users:seq<User>) (roles:seq<Role>) = 
    let uc = Seq.length users
    let rc = Seq.length roles
    let getU i = (Seq.item (i % uc) users).Id
    let getR i = (Seq.item (i % rc) roles).Name
    generate count (fun i -> new UsersRole ( User = getU i, Role = getR i))

let rolesPermissions count (roles:seq<Role>) (permissions:seq<Permission>) =
    let rc = Seq.length roles
    let pc = Seq.length permissions
    let getP i = (Seq.item (i % pc) permissions).Id
    let getR i = (Seq.item (i % rc) roles).Name
    generate count (fun i -> new RolesPermission(Role = getR i, Permission = getP i))

let permissions count (services: seq<Service>) = 
    let sc = Seq.length services
    let getS i = Seq.item (i % sc) services
    generate count (fun i -> new Permission(
                                Id = Guid.NewGuid(),
                                Action = data "Action" i,
                                ServiceName = (getS i).Name,
                                Description = "This record is generated by F# seeding script."
                                ))

let roles c = generate c (fun i -> new Role(Name = data "Role" i))  

let services c = generate c (fun i -> new Service(Name = data "Service" i))

let organisations c = generate c (fun i -> new Organisation(Name = data "Organisation" i))

